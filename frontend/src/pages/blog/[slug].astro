---
import Layout from '~/layouts/PageLayout.astro';

// Static generation for known blog posts
export async function getStaticPaths() {
  // Return known blog post slugs - this ensures routes exist
  // Content will be loaded dynamically via JavaScript
  return [
    { params: { slug: 'plan-dzialania-i-cele-portfolio' } },
    { params: { slug: 'example-post' } },
    { params: { slug: 'hello-world' } },
    { params: { slug: 'first-post' } },
    { params: { slug: 'moj-pierwszy-post' } }
  ];
}

const { slug } = Astro.params;

// Basic metadata - will be updated dynamically by client-side script
const metadata = {
  title: `Blog Post - Portfolio KGR33N`,
  description: 'Post z bloga o programowaniu i GameDev',
  robots: {
    index: true,
    follow: true,
  },
};
---

<Layout metadata={metadata}>
  <div class="min-h-screen px-4 md:px-6 py-12 sm:py-16 lg:py-20 mx-auto max-w-4xl">
    <!-- Loading state -->
    <div id="loading" class="flex justify-center items-center py-16">
      <div class="animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600"></div>
      <span class="ml-3 text-lg text-gray-600 dark:text-gray-300">
        ≈Åadowanie posta...
      </span>
    </div>

    <!-- Error state -->
    <div id="error" class="hidden text-center py-16">
      <div class="bg-red-50 dark:bg-red-900/20 border border-red-200 dark:border-red-800 rounded-lg p-8 max-w-md mx-auto">
        <div class="text-red-600 dark:text-red-400 mb-4">
          <svg class="w-12 h-12 mx-auto mb-4" fill="currentColor" viewBox="0 0 20 20">
            <path fill-rule="evenodd" d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7 4a1 1 0 11-2 0 1 1 0 012 0zm-1-9a1 1 0 00-1 1v4a1 1 0 102 0V6a1 1 0 00-1-1z" clip-rule="evenodd" />
          </svg>
        </div>
        <h2 class="text-xl font-semibold text-red-800 dark:text-red-200 mb-2">
          Post nie zosta≈Ç znaleziony
        </h2>
        <p class="text-red-600 dark:text-red-300 mb-4">
          Nie uda≈Ço siƒô za≈Çadowaƒá tego posta.
        </p>
        <div class="space-x-3">
          <button id="retry" class="px-4 py-2 bg-red-600 text-white rounded hover:bg-red-700 transition-colors">
            Spr√≥buj ponownie
          </button>
          <a href="/blog" class="px-4 py-2 bg-gray-300 dark:bg-gray-700 text-gray-700 dark:text-gray-300 rounded hover:bg-gray-400 dark:hover:bg-gray-600 transition-colors">
            Powr√≥t do bloga
          </a>
        </div>
      </div>
    </div>

    <!-- Post content -->
    <article id="post-content" class="hidden">
      <!-- Content will be populated by JavaScript -->
    </article>
  </div>
</Layout>

<script define:vars={{ slug }}>
  const API_URL = 'http://localhost:8000/api/blog/';
  
  const loading = document.getElementById('loading');
  const error = document.getElementById('error');
  const postContent = document.getElementById('post-content');
  const retryBtn = document.getElementById('retry');

  function formatDate(dateString) {
    return new Date(dateString).toLocaleDateString('pl-PL', {
      year: 'numeric',
      month: 'long',
      day: 'numeric'
    });
  }

  function renderMarkdown(content) {
    return content
      .replace(/^# (.*$)/gm, '<h1 class="text-4xl font-bold mb-6 text-gray-900 dark:text-gray-100">$1</h1>')
      .replace(/^## (.*$)/gm, '<h2 class="text-3xl font-bold mb-4 mt-8 text-gray-900 dark:text-gray-100">$1</h2>')
      .replace(/^### (.*$)/gm, '<h3 class="text-2xl font-bold mb-3 mt-6 text-gray-900 dark:text-gray-100">$1</h3>')
      .replace(/^\* (.*$)/gm, '<li class="mb-1 text-gray-700 dark:text-gray-300">$1</li>')
      .replace(/^- (.*$)/gm, '<li class="mb-1 text-gray-700 dark:text-gray-300">$1</li>')
      .replace(/\*\*(.*?)\*\*/g, '<strong class="font-semibold text-gray-900 dark:text-gray-100">$1</strong>')
      .replace(/\*(.*?)\*/g, '<em class="italic">$1</em>')
      .replace(/`(.*?)`/g, '<code class="bg-gray-100 dark:bg-gray-800 text-gray-900 dark:text-gray-100 px-1 py-0.5 rounded text-sm font-mono">$1</code>')
      .replace(/

/g, '</p><p class="mb-4 text-gray-700 dark:text-gray-300 leading-relaxed">')
      .replace(/
/g, '<br>');
  }

  async function loadPost() {
    try {
      console.log('≈Åadowanie posta:', slug);
      
      loading.classList.remove('hidden');
      error.classList.add('hidden');
      postContent.classList.add('hidden');
      
      const response = await fetch(`${API_URL}${slug}`);
      console.log('Response status:', response.status);
      
      if (!response.ok) {
        if (response.status === 404) {
          throw new Error('Post nie zosta≈Ç znaleziony');
        }
        throw new Error(`HTTP error! status: ${response.status}`);
      }
      
      const post = await response.json();
      console.log('Post data:', post);
      
      // Update page title dynamically
      if (post.meta_title || post.title) {
        document.title = `${post.meta_title || post.title} - Portfolio KGR33N`;
      }

      // Update meta description
      const metaDescription = document.querySelector('meta[name="description"]');
      if (metaDescription && (post.meta_description || post.excerpt)) {
        metaDescription.setAttribute('content', post.meta_description || post.excerpt);
      }

      const wrappedContent = `<p class="mb-4 text-gray-700 dark:text-gray-300 leading-relaxed">${renderMarkdown(post.content)}</p>`;

      // Render post
      postContent.innerHTML = `
        <header class="mb-8 text-center">
          <h1 class="text-4xl md:text-5xl font-bold leading-tight mb-4 text-gray-900 dark:text-gray-100">
            ${post.title}
          </h1>
          
          <div class="flex flex-wrap justify-center items-center gap-4 text-sm text-gray-500 dark:text-gray-400 mb-6">
            <time datetime="${post.published_at || post.created_at}" class="flex items-center">
              <svg class="w-4 h-4 mr-1" fill="currentColor" viewBox="0 0 20 20">
                <path fill-rule="evenodd" d="M6 2a1 1 0 00-1 1v1H4a2 2 0 00-2 2v10a2 2 0 002 2h12a2 2 0 002-2V6a2 2 0 00-2-2h-1V3a1 1 0 10-2 0v1H7V3a1 1 0 00-1-1zm0 5a1 1 0 000 2h8a1 1 0 100-2H6z" clip-rule="evenodd"></path>
              </svg>
              ${formatDate(post.published_at || post.created_at)}
            </time>
            
            <span class="flex items-center">
              <svg class="w-4 h-4 mr-1" fill="currentColor" viewBox="0 0 20 20">
                <path fill-rule="evenodd" d="M10 9a3 3 0 100-6 3 3 0 000 6zm-7 9a7 7 0 1114 0H3z" clip-rule="evenodd"></path>
              </svg>
              ${post.author}
            </span>
            
            ${post.category ? `
              <span class="bg-blue-100 dark:bg-blue-900 text-blue-800 dark:text-blue-200 px-3 py-1 rounded-full text-xs">
                ${post.category}
              </span>
            ` : ''}
            
            <span class="text-xs">
              Jƒôzyk: ${post.language === 'pl' ? 'üáµüá± Polski' : 'üá¨üáß English'}
            </span>
          </div>

          ${post.excerpt ? `
            <div class="text-xl text-gray-600 dark:text-gray-300 leading-relaxed mb-8 max-w-3xl mx-auto">
              ${post.excerpt}
            </div>
          ` : ''}
        </header>

        <div class="prose prose-lg dark:prose-invert max-w-none">
          ${wrappedContent}
        </div>

        ${post.tags && post.tags.length > 0 ? `
          <footer class="mt-8 pt-6 border-t border-gray-200 dark:border-gray-700">
            <div class="flex flex-wrap gap-2">
              <span class="text-sm text-gray-500 dark:text-gray-400 mr-2">Tagi:</span>
              ${post.tags.map(tag => `
                <span class="bg-gray-100 dark:bg-gray-800 text-gray-600 dark:text-gray-300 px-2 py-1 rounded text-sm hover:bg-gray-200 dark:hover:bg-gray-700 transition-colors cursor-pointer">
                  #${tag}
                </span>
              `).join('')}
            </div>
          </footer>
        ` : ''}

        <div class="mt-12 text-center">
          <a href="/blog" class="inline-flex items-center text-blue-600 dark:text-blue-400 hover:text-blue-700 dark:hover:text-blue-300 font-medium transition-colors">
            <svg class="w-4 h-4 mr-2" fill="currentColor" viewBox="0 0 20 20">
              <path fill-rule="evenodd" d="M12.707 5.293a1 1 0 010 1.414L9.414 10l3.293 3.293a1 1 0 01-1.414 1.414l-4-4a1 1 0 010-1.414l4-4a1 1 0 011.414 0z" clip-rule="evenodd"></path>
            </svg>
            Powr√≥t do bloga
          </a>
        </div>
      `;
      
      loading.classList.add('hidden');
      postContent.classList.remove('hidden');
      
    } catch (err) {
      console.error('B≈ÇƒÖd podczas ≈Çadowania posta:', err);
      
      loading.classList.add('hidden');
      error.classList.remove('hidden');
      error.querySelector('h2').textContent = err.message;
    }
  }

  // Event listeners
  retryBtn?.addEventListener('click', loadPost);
  
  // Load post when page loads
  document.addEventListener('DOMContentLoaded', loadPost);
</script>

<script define:vars={{ slug }}>
  const API_URL = `http://localhost:8000/api/blog/${slug}`;
  
  const loading = document.getElementById('loading');
  const error = document.getElementById('error');
  const post = document.getElementById('post');
  const retryBtn = document.getElementById('retry');
  const errorMessage = document.getElementById('error-message');

  function formatDate(dateString) {
    return new Date(dateString).toLocaleDateString('pl-PL', {
      year: 'numeric',
      month: 'long',
      day: 'numeric'
    });
  }

  function renderContent(content) {
    return content
      .replace(/^# (.*$)/gm, '<h1 class="text-4xl font-bold mb-6 text-gray-900 dark:text-gray-100">$1</h1>')
      .replace(/^## (.*$)/gm, '<h2 class="text-3xl font-bold mb-4 mt-8 text-gray-900 dark:text-gray-100">$1</h2>')
      .replace(/^### (.*$)/gm, '<h3 class="text-2xl font-bold mb-3 mt-6 text-gray-900 dark:text-gray-100">$1</h3>')
      .replace(/^\* (.*$)/gm, '<li class="mb-1 text-gray-700 dark:text-gray-300">$1</li>')
      .replace(/^- (.*$)/gm, '<li class="mb-1 text-gray-700 dark:text-gray-300">$1</li>')
      .replace(/\*\*(.*?)\*\*/g, '<strong class="font-semibold text-gray-900 dark:text-gray-100">$1</strong>')
      .replace(/\*(.*?)\*/g, '<em class="italic">$1</em>')
      .replace(/`(.*?)`/g, '<code class="bg-gray-100 dark:bg-gray-800 text-gray-900 dark:text-gray-100 px-1 py-0.5 rounded text-sm font-mono">$1</code>')
      .replace(/\n\n/g, '</p><p class="mb-4 text-gray-700 dark:text-gray-300 leading-relaxed">')
      .replace(/\n/g, '<br>');
  }
  
  async function loadPost() {
    try {
      console.log('≈Åadowanie posta:', API_URL);
      
      loading.classList.remove('hidden');
      error.classList.add('hidden');
      post.classList.add('hidden');
      
      const response = await fetch(API_URL);
      console.log('Response status:', response.status);
      
      if (!response.ok) {
        if (response.status === 404) {
          throw new Error('Post nie zosta≈Ç znaleziony');
        }
        throw new Error(`HTTP error! status: ${response.status}`);
      }
      
      const data = await response.json();
      console.log('Post data:', data);

      // Update page title
      document.title = `${data.meta_title || data.title} - Portfolio KGR33N`;

      // Update meta description
      const metaDescription = document.querySelector('meta[name="description"]');
      if (metaDescription) {
        metaDescription.setAttribute('content', data.meta_description || data.excerpt || 'Post z bloga KGR33N');
      }

      const wrappedContent = `<p class="mb-4 text-gray-700 dark:text-gray-300 leading-relaxed">${renderContent(data.content)}</p>`;
      
      // Render post
      post.innerHTML = `
        <header class="mb-8 text-center">
          <h1 class="text-4xl md:text-5xl font-bold leading-tight mb-4 text-gray-900 dark:text-gray-100">
            ${data.title}
          </h1>
          
          <div class="flex flex-wrap justify-center items-center gap-4 text-sm text-gray-500 dark:text-gray-400 mb-6">
            <time datetime="${data.published_at || data.created_at}" class="flex items-center">
              <svg class="w-4 h-4 mr-1" fill="currentColor" viewBox="0 0 20 20">
                <path fill-rule="evenodd" d="M6 2a1 1 0 00-1 1v1H4a2 2 0 00-2 2v10a2 2 0 002 2h12a2 2 0 002-2V6a2 2 0 00-2-2h-1V3a1 1 0 10-2 0v1H7V3a1 1 0 00-1-1zm0 5a1 1 0 000 2h8a1 1 0 100-2H6z" clip-rule="evenodd" />
              </svg>
              ${formatDate(data.published_at || data.created_at)}
            </time>
            
            <span class="flex items-center">
              <svg class="w-4 h-4 mr-1" fill="currentColor" viewBox="0 0 20 20">
                <path fill-rule="evenodd" d="M10 9a3 3 0 100-6 3 3 0 000 6zm-7 9a7 7 0 1114 0H3z" clip-rule="evenodd" />
              </svg>
              ${data.author}
            </span>
            
            ${data.category ? `
              <span class="bg-blue-100 dark:bg-blue-900 text-blue-800 dark:text-blue-200 px-3 py-1 rounded-full text-xs">
                ${data.category}
              </span>
            ` : ''}
            
            <span class="text-xs">
              Jƒôzyk: ${data.language === 'pl' ? 'üáµüá± Polski' : 'üá¨üáß English'}
            </span>
          </div>

          ${data.excerpt ? `
            <div class="text-xl text-gray-600 dark:text-gray-300 leading-relaxed mb-8 max-w-3xl mx-auto">
              ${data.excerpt}
            </div>
          ` : ''}
        </header>

        <div class="prose prose-lg dark:prose-invert max-w-none">
          ${wrappedContent}
        </div>

        ${data.tags && data.tags.length > 0 ? `
          <footer class="mt-8 pt-6 border-t border-gray-200 dark:border-gray-700">
            <div class="flex flex-wrap gap-2">
              <span class="text-sm text-gray-500 dark:text-gray-400 mr-2">Tagi:</span>
              ${data.tags.map(tag => `
                <span class="bg-gray-100 dark:bg-gray-800 text-gray-600 dark:text-gray-300 px-2 py-1 rounded text-sm hover:bg-gray-200 dark:hover:bg-gray-700 transition-colors cursor-pointer">
                  #${tag}
                </span>
              `).join('')}
            </div>
          </footer>
        ` : ''}

        <div class="mt-12 text-center">
          <a href="/blog" class="inline-flex items-center text-blue-600 dark:text-blue-400 hover:text-blue-700 dark:hover:text-blue-300 font-medium transition-colors">
            <svg class="w-4 h-4 mr-2" fill="currentColor" viewBox="0 0 20 20">
              <path fill-rule="evenodd" d="M12.707 5.293a1 1 0 010 1.414L9.414 10l3.293 3.293a1 1 0 01-1.414 1.414l-4-4a1 1 0 010-1.414l4-4a1 1 0 011.414 0z" clip-rule="evenodd" />
            </svg>
            Powr√≥t do bloga
          </a>
        </div>
      `;
      
      // Show post
      loading.classList.add('hidden');
      post.classList.remove('hidden');
      
    } catch (err) {
      console.error('B≈ÇƒÖd podczas ≈Çadowania posta:', err);
      
      loading.classList.add('hidden');
      error.classList.remove('hidden');
      errorMessage.textContent = err.message;
    }
  }
  
  // Event listeners
  retryBtn?.addEventListener('click', loadPost);
  
  // Load post when page loads
  document.addEventListener('DOMContentLoaded', loadPost);
</script>
