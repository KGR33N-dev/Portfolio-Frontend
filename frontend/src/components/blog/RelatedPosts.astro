---
import { APP_BLOG } from 'astrowind:config';
import { API_URLS } from '~/config/api';
import BlogHighlightedPosts from '../widgets/BlogHighlightedPosts.astro';
import { getBlogPermalink } from '~/utils/permalinks';

interface BlogPost {
  id: number;
  title: string;
  slug: string;
  tags?: string[];
  category?: string;
}

export interface Props {
  post: BlogPost;
}

const { post } = Astro.props;

let relatedPosts: BlogPost[] = [];

// Get related posts based on tags or category
if (post.tags && post.tags.length > 0) {
  try {
    const response = await fetch(`${API_URLS.getAllPosts()}?tags=${post.tags.join(',')}&limit=4`);
    if (response.ok) {
      const data = await response.json();
      relatedPosts = data.posts?.filter((p: BlogPost) => p.slug !== post.slug) || [];
    }
  } catch (error) {
    console.error('Error fetching related posts:', error);
  }
}
---

{
  APP_BLOG.isRelatedPostsEnabled ? (
    <BlogHighlightedPosts
      classes={{
        container:
          'pt-0 lg:pt-0 md:pt-0 intersect-once intersect-quarter motion-safe:md:opacity-0 motion-safe:md:intersect:animate-fade',
      }}
      title="Related Posts"
      linkText="View All Posts"
      linkUrl={getBlogPermalink()}
      postIds={relatedPosts.map((post) => post.id.toString())}
    />
  ) : null
}
