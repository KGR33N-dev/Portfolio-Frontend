---
import type { Post } from '~/types/blog';
import { useTranslations } from '~/i18n/utils';
import { languages } from '~/i18n';
import Image from '~/components/common/Image.astro';
import { findImage } from '~/utils/images';

export interface Props {
  post: Post;
  lang?: string;
}

const { post, lang = 'en' } = Astro.props;
const t = useTranslations(lang as keyof typeof languages);
const image = await findImage(post.featured_image);

// Use post.permalink directly from our types (which includes language)
const link = post.permalink;
---

<article
  class="mb-6 transition intersect-once intersect-quarter motion-safe:md:opacity-0 motion-safe:md:intersect:animate-fade bg-white dark:bg-gray-800 rounded-xl shadow-lg overflow-hidden hover:shadow-xl hover:-translate-y-1 border border-gray-100 dark:border-gray-700 flex flex-col h-full"
>
  <div class="relative md:h-64 bg-gray-400 dark:bg-slate-700 rounded-t-xl shadow-lg mb-0">
    {
      image && (
        <Image
          src={image}
          class="w-full md:h-full rounded-t-xl shadow-lg bg-gray-400 dark:bg-slate-700 object-cover"
          widths={[400, 900]}
          width={400}
          sizes="(max-width: 900px) 400px, 900px"
          alt={post.currentTitle}
          aspectRatio="16:9"
          layout="cover"
          loading="lazy"
          decoding="async"
        />
      )
    }
  </div>

  <div class="p-6 flex flex-col flex-1">
    <!-- Category and Date -->
    <div class="flex items-center gap-3 mb-4">
      {post.category && (
        <span class="text-xs font-semibold text-blue-600 dark:text-blue-400 bg-blue-100 dark:bg-blue-900/30 px-3 py-1 rounded-full">
          {post.category}
        </span>
      )}
      <time class="text-xs text-gray-500 dark:text-gray-400 flex items-center">
        <svg class="w-3 h-3 mr-1" fill="currentColor" viewBox="0 0 20 20">
          <path fill-rule="evenodd" d="M6 2a1 1 0 00-1 1v1H4a2 2 0 00-2 2v10a2 2 0 002 2h12a2 2 0 002-2V6a2 2 0 00-2-2h-1V3a1 1 0 10-2 0v1H7V3a1 1 0 00-1-1zm0 5a1 1 0 000 2h8a1 1 0 100-2H6z" clip-rule="evenodd" />
        </svg>
        {new Date(post.publishDate).toLocaleDateString(lang === 'pl' ? 'pl-PL' : 'en-US', {
          year: 'numeric',
          month: 'short',
          day: 'numeric'
        })}
      </time>
    </div>

    <!-- Title -->
    <h3 class="text-xl sm:text-2xl font-bold leading-tight mb-2 font-heading dark:text-slate-300">
      {post.currentTitle}
    </h3>

    <!-- Excerpt -->
    <p class="text-muted dark:text-slate-400 text-lg mb-4 line-clamp-3 leading-relaxed">
      {post.currentExcerpt}
    </p>

    <!-- Tags -->
    {post.tags && post.tags.length > 0 && (
      <div class="flex flex-wrap gap-2 mb-4">
        {post.tags.slice(0, 3).map((tag) => (
          <span class="text-xs bg-gray-100 dark:bg-gray-700 text-gray-600 dark:text-gray-300 px-2 py-1 rounded">
            #{tag}
          </span>
        ))}
        {post.tags.length > 3 && (
          <span class="text-xs text-gray-500 dark:text-gray-400">
            +{post.tags.length - 3} {t('blog.more')}
          </span>
        )}
      </div>
    )}

    <!-- Footer -->
    <div class="mt-auto pt-4 flex flex-col sm:flex-row sm:items-center gap-3 sm:gap-4">
      <a 
        href={link}
        class="inline-flex items-center text-blue-600 dark:text-blue-400 hover:text-blue-800 dark:hover:text-blue-200 font-semibold transition-colors group flex-shrink-0"
      >
        {t('blog.readMore')}
        <svg class="w-4 h-4 ml-2 transition-transform group-hover:translate-x-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7" />
        </svg>
      </a>
      
      <div class="flex items-center text-xs text-gray-500 dark:text-gray-400 flex-shrink-0">
        ðŸ•’
        <span class="ml-1 whitespace-nowrap">{post.readingTime || '1 min'}</span>
      </div>
    </div>
  </div>
</article>

<style>
  .line-clamp-3 {
    display: -webkit-box;
    -webkit-line-clamp: 3;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
  
  /* Ensure responsive text wrapping for multi-language support */
  @media (max-width: 640px) {
    .blog-footer {
      flex-direction: column;
      align-items: flex-start;
      gap: 0.75rem;
    }
  }
  
  /* Better text handling for longer translations */
  .read-time-text {
    word-break: keep-all;
    hyphens: none;
  }
</style>
