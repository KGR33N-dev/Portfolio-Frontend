---
import { languages } from '~/i18n';
import { getLangFromUrl } from '~/i18n/utils';

// Get current language and path automatically
const currentLang = getLangFromUrl(Astro.url);
const currentPath = Astro.url.pathname;

// Function to redirect to the same path but with different language
function getRedirectPath(currentPath: string, targetLang: string): string {
  // Remove domain if present (e.g., "kgr33n.com/en/blog" -> "/en/blog")
  const path = currentPath.replace(/^https?:\/\/[^/]+/, '');
  
  // Split path into segments
  const segments = path.split('/').filter(Boolean);
  // If no segments (home page), return just the language
  if (segments.length === 0) {
    return `/${targetLang}`;
  }
  // Replace first segment (language) with target language
  segments[0] = targetLang;
  return `/${segments.join('/')}`;
}
---

<div class="flex items-center space-x-2">
  {Object.entries(languages).map(([lang, label]) => {
    const targetUrl = getRedirectPath(currentPath, lang as keyof typeof languages);
    
    return (
      <a
        href={targetUrl}
        class={`px-2 py-1 text-sm rounded transition-colors ${
          currentLang === lang
            ? 'bg-primary text-white'
            : 'text-gray-600 hover:text-primary dark:text-gray-300 dark:hover:text-primary'
        }`}
        aria-label={`Switch to ${label}`}
        data-language={lang}
      >
        {lang.toUpperCase()}
      </a>
    );
  })}
</div>
